1.What is MySQL
A.MySQL is a relational database management system.

2.What are the joins?
A.Combine rows from two or more tables based on a related column between them.
Here we have multiple Joins are there :-
->Inner Join:-It fetch Matching records from both tables
->Left Join:-Inner Join + Additional records from left join
->Right Join:-Inner Join + Additional records from right join
->outer Join:-fetch Matching records from both table +Left Join+Right Join
->Self Join: A table joined with itself.
->Cross Join: Returns the Cartesian product of the two tables.    table1 rows * table2 rows   rows (without on statement)
->Natural Join: Automatically matches columns with the same name and type in both tables. If no common columns, it behaves like a cross join.

3.What is Normalization?
Normalization is used for database designing to minimizing data redundancy and eliminated undesriable characteries like insertion anomaly,
Updation anomaly,Deletion anomaly

Normalization divides the larger table into smaller tables and links them using relationship.
I).1NF:-
->Every Column need to have a single value.
->Each row should be unique ,Either through a single or multiple columns ,not mandatory to have primary ke

II)2NF:-
->Must be in 1NF
->All Non key attributes must be fully dependent on candidate key.
If a non-key column is partially depedent on candidate key (subset of columns forming candidate key) then split then into separate table.
->Every table should  have primary key and relationship between the tables should be formed using foreign key.


Candidate key:-
->set of columns which uniquely identified a record.
->A table can have multiple candidate keys because there can be multiple set of columns which uniquely identify a record/row in a table.

Non-key columns:-
Columns which are not part of the candidate key or primary key

Paritial Depedency:-
If your cndidate key is a combination of 2 columns then every non key column should be fully dependent on all the column
If there is any non key column which depends only on on of the candidate key columns then this results in partial dependency.e

III)3NF:-
->Must be in 2NF
->Aviod Transition dependencies

IV)4NF:-Eliminates multi-valued dependencies
V)5NF:-Eliminates join dependencies

4.Expalin Denormalization?
A.Denormlization is a database optimization technique in which add redundant data to one or more tables.
->The process of taking a normalized schema and making it non-normalized is called denormalization.

5.Primary Key vs Foriegn Key? 
             Primary Key                                   Foreign Key
->Primary key focuses on uniqueness in the table       ->A foreign key is a column in the table that is the primary key in another table.
->Primary Key cannot be null and it should be integer. ->Foreign Key can be null and it should be integer.
->We can have one primary key                          ->We can multiple foreign key in aa table.
->To identify any record primary key is must and       ->A foreign key is a field in the table that is a primary key in another table aaand it is 								not compulsory to have in every table.
every table must have primary key   


6.What is differenece between Primary Key vs candidate key vs unique key?
A. 
             Primary Key                                  Candidate  Key                       		Unique Key
->Primary key focuses on uniqueness in the table       ->A foreign key focuses on uniqueness in table and offers single key or group of keys that 								uniquely identify rows in a table.

->It cannot be null and it should be integer           ->A candidate keys cannot be null and it can be    ->Unique keys can be null and it can be 														both integer and string.
							both integer and string
->we have one primary in a table                       ->We can multiple candidate keys in a table.       ->We can multiple Unique keys in a table.

7.What is  trigger?
A.Trigger is event that that initiates a specific action or set of actions within a program or system.

8.Explin transactions?
A.Transactions helps us to execute group of statements like select,insert,update and delete as one logical unit.
Ex:-
START TRANSACTION
INSERT INTO 'product' ('productname');
ROLLBACK;

9.What is an index?How can an index be declared in MYSQL?
A.An index in MySQL helps to improve speed of operations in a table.
 
CREATE TABLE 'ins' ON 'product' ('productName');

10.What is the view?How can you create and drop view in MYSQL?
A.Database views are virtual table that are generated by the query output,the output which is  generated by joins or complex query or simple query for that output we can give virtual table name called view.

create view "propertylist" s select * from t1 join t2 on t1.id=t2.id;






11.What is the Difference between DBMS and RDBMS?
                DBMS                                                         RDBMS
->It stores the data in the format of files                               ->It stores the data in the rows & columns in the table format.
->It is designed to handle a small amount of data.                        ->It is designed to handle a large amount of data.
->DBMS doesn't support multiple users                                     ->RDBMS does supports multiple users
->A distributed database is not supported				  ->A distributed database is supported.
->In DBMS normalization is achievable                                     ->In RDBMS normalization is not achievable.
	 


12.What are the uses of SQL Functions?
A.SQL Functions are methods used to perform data operations.
->SQL has many in-built functions used to perform various operations.
Ex:-SUM,AVG,MAX,MIN,GETDATE,DATEADD,DATEDIFF,CONCAT

13.Difference between Union vs Union All?
A.Union: Combines the results of two SELECT statements and removes duplicate rows.
Union All: Combines the results of two SELECT statements and includes all rows, including duplicates.
ex:-
SELECT column1, column2 FROM table1
UNION
SELECT column1, column2 FROM table2;

SELECT column1, column2 FROM table1
UNION ALL
SELECT column1, column2 FROM table2;

14.What are MYSQL Aliases?
A.Aliases acts like a Nick names or temp variable

15.Difference between char vs varchar?
CHAR: Fixed-length string data type
VARCHAR: Variable-length


16.What are subqueries?
Subquery: A query nested inside another query, used to retrieve data that will be used in the main query.

Types of Subqueries and Their Differences:
Scalar Subquery: Returns a single value.
Correlated Subquery: inner query depends on outer query
Multi-row Subquery: Returns multiple rows, often used with operators like IN, ANY, ALL.
Table Subquery: Returns a table that can be used in the FROM clause.


17.Difference b/w Blob vs text data types in MYSQL?
BLOB: Binary Large Object, used for storing binary data such as images, videos, or files.
TEXT: Used for storing large strings of textual data, such as long paragraphs or articles.

18.Aggregate Funtions 
->Sum()
->AVG()
->COUNT()
->MIN()
->MAX()

19.Difference between cluster index vs non-cluster index
A.
Clustered Index: Determines the physical order of data in a table, allowing only one per table.it generally created on the primary key column
Non-Clustered Index: Does not affect the physical order of data, allows multiple per table.

20.What is a stored procedure?
A.A stored procedure is a precompile set of SQL Statements that performs a specific task.it can be called and executed multiple times with different 
parameters.

21.What is ACID in database transaction?\
ACID in database transactions stands for Atomicity, Consistency, Isolation, and Durability:

- **Atomicity**: Ensures that all operations within a transaction are completed successfully; if any operation fails, the entire transaction fails.
- **Consistency**: Ensures that a transaction brings the database from one valid state to another, maintaining all defined rules and constraints.
- **Isolation**: Ensures that concurrent transactions do not interfere with each other, maintaining data integrity during simultaneous operations.
- **Durability**: Ensures that once a transaction is committed, the changes are permanent and survive system failures.



22.What is a deadlock?
Deadlock: A situation where two or more transactions are waiting for each other to release resources, resulting in a state where none of the transactions can proceed.

23.What is group by statement?
A. A group by statement group records into summarize and return single record for each group

24.Difference between group by and having claauses?
A.Group by is used to group records based on one or mor columns
while Having is used to filter grouped rows based on specific conditions

25.Difference OLTP VS OLAP ?

OLTP: Online Transaction Processing, designed for real-time, high-volume transactions and data entry.
OLAP: Online Analytical Processing, designed for complex queries and data analysis, often used for business intelligence

26.What is data warehouse?
A.A  data warehouse is a large repository of data collected from various source,structured and organized to support business intelligence and reporting.


27.what is relationship and what are they?

Relationship: An association between tables in a database.

Types of Relationships:
One-to-One (1:1): Each row in Table A links to one row in Table B, and vice versa.
One-to-Many (1): Each row in Table A links to multiple rows in Table B, but each row in Table B links to one row in Table A.
Many-to-Many (M): Each row in Table A links to multiple rows in Table B, and each row in Table B links to multiple rows in Table A.


28.Different types of statements ?
A.
DDL (Data Definition Language): Statements used to define and manage database structures (e.g., CREATE, ALTER, DROP).
DML (Data Manipulation Language): Statements used to manipulate data within the database (e.g., SELECT, INSERT, UPDATE, DELETE).
TCL (Transaction Control Language): Statements used to manage transactions within the database (e.g., COMMIT, ROLLBACK, SAVEPOINT).
DCL (Data Control Language): Statements used to control access to data within the database (e.g., GRANT, REVOKE).

29.Difference between COMMIT, ROLLBACK, SAVEPOINT

COMMIT: Makes all changes in a transaction permanent.
ROLLBACK: Undoes all changes made in a transaction.
SAVEPOINT: Sets a point within a transaction to which you can later roll back.


30.Difference between sql vs MySQL
Certainly! Here is a table summarizing the differences between SQL and MySQL in single lines:

| Feature          | SQL                                                                 | MySQL                                                                 |
|------------------|---------------------------------------------------------------------|-----------------------------------------------------------------------|
| Definition       | Structured Query Language, a standard language for database management. | An open-source relational database management system.                |
| Purpose          | Used to manage and manipulate relational databases.                | Uses SQL as its query language to manage and manipulate databases.   |
| Standard         | A standard language defined by ISO/IEC.                            | An implementation of the SQL standard.                                |
| Usage            | Used across various database management systems.                   | Specific to the MySQL database management system.                    |
| Vendor           | Not tied to a specific vendor.                                     | Developed and maintained by Oracle Corporation.                       |
| Features         | Provides commands for data definition, manipulation, and control.  | Includes additional features like stored procedures, triggers, etc.   |
| Extensions       | No proprietary extensions.                                        | Includes proprietary extensions and functions.                       |

This table highlights the key differences between SQL as a language and MySQL as a database management system that implements SQL.

31.differences between SQL and PL/SQL

Certainly! Here is a table summarizing the differences between SQL and PL/SQL in single lines:

| Feature          | SQL                                                                 | PL/SQL                                                                |
|------------------|---------------------------------------------------------------------|-----------------------------------------------------------------------|
| Definition       | Structured Query Language, a standard language for database management. | Procedural Language for SQL, an extension of SQL with procedural capabilities. |
| Purpose          | Used to manage and manipulate relational databases.                | Used to write complex database procedures, functions, and triggers.   |
| Standard         | A standard language defined by ISO/IEC.                            | An extension of SQL specific to Oracle databases.                     |
| Usage            | Used across various database management systems.                   | Specific to Oracle databases.                                         |
| Procedural       | Non-procedural, focuses on data manipulation.                      | Procedural, includes control structures like loops and conditionals.  |
| Complexity       | Simpler, used for basic data operations.                            | More complex, used for advanced database programming.                 |
| Examples         | SELECT, INSERT, UPDATE, DELETE.                                    | BEGIN, END, IF, LOOP, WHILE.                                          |

This table highlights the key differences between SQL as a standard language for database management and PL/SQL as a procedural extension of SQL specific to Oracle databases.

32.Difference between SQL and NoSQL?
Certainly! Here is a table summarizing the differences between SQL and NoSQL in single lines:

| Feature          | SQL                                                                 | NoSQL                                                                 |
|------------------|---------------------------------------------------------------------|-----------------------------------------------------------------------|
| Definition       | Structured Query Language, a standard language for relational databases. | Non-relational database systems designed for specific data models.    |
| Data Model       | Relational, uses tables with rows and columns.                     | Various models: key-value, document, columnar, graph.                  |
| Schema           | Fixed schema, predefined structure.                                | Schema-less or flexible schema, allows for dynamic data structures.    |
| Scalability      | Vertical scaling, adding more power to a single server.             | Horizontal scaling, adding more servers to distribute load.           |
| Transactions     | Supports ACID transactions.                                        | Often supports eventual consistency, some support ACID.                |
| Query Language   | SQL, a standardized query language.                                | Varies by database, often uses specific query languages or APIs.       |
| Use Cases        | Suitable for complex queries, joins, and transactions.            | Suitable for large-scale data, real-time analytics, and unstructured data. |
| Examples         | MySQL, PostgreSQL, Oracle.                                        | MongoDB, Cassandra, Redis, Neo4j.                                     |

This table highlights the key differences between SQL as a standard language for relational databases and NoSQL as a category of non-relational database systems designed for specific data models and use cases.

33.What is CTE?
A Common Table Expression (CTE) in MySQL is a temporary result set that you can reference within a `SELECT`, `INSERT`, `UPDATE`, or `DELETE` statement.
-- By using row_number
WITH ranked_cities AS (
    SELECT
        state,
        city,
        population,
        ROW_NUMBER() OVER (PARTITION BY state ORDER BY population DESC) AS rn_desc,
        ROW_NUMBER() OVER (PARTITION BY state ORDER BY population ASC) AS rn_asc
    FROM cities
)
SELECT
    state,
    MAX(CASE WHEN rn_desc = 1 THEN city ELSE NULL END) AS high_population,
    MAX(CASE WHEN rn_asc = 1 THEN city ELSE NULL END) AS low_population
FROM ranked_cities
GROUP BY state;

33.No of tales join for 10 tables?
A.N-1=10-1=9